require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'
install! 'cocoapods', :deterministic_uuids => false

production = ENV["PRODUCTION"] == "1"

use_frameworks! :linkage => :static

target 'homeservicesprovider' do
  
  $static_framework = []
  
  $RNFirebaseAsStaticFramework = true

  # React Native Maps dependencies
  rn_maps_path = '../node_modules/react-native-maps'

  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :production => production,
    :hermes_enabled => flags[:hermes_enabled],
    # :fabric_enabled => flags[:fabric_enabled],
    # :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  $static_framework += [
    'react-native-maps',
    'react-native-google-maps',
    'Google-Maps-iOS-Utils',
    'GoogleMaps',
    # 'RNPermissions',
    # 'Permission-LocationWhenInUse',
    # 'Permission-Notifications',
    # 'react-native-paste-input',
    # 'vision-camera-code-scanner',
    # 'VisionCamera'
  ]

  pod 'react-native-google-maps', :path => rn_maps_path
  pod 'GoogleMaps'
  pod 'Google-Maps-iOS-Utils'



end


  # target 'homeservicesproviderTests' do
  #   inherit! :complete
  #   # Pods for testing
  # end


  pre_install do |installer|
    Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
        installer.pod_targets.each do |pod|
            if $static_framework.include?(pod.name)
                def pod.build_type;
                Pod::BuildType.static_library # >= 1.9
            end
        end
    end
end


pre_install do |installer|
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
      installer.pod_targets.each do |pod|
          if $static_framework.include?(pod.name)
              def pod.build_type;
              Pod::BuildType.static_library # >= 1.9
          end
      end
  end
end

post_install do |installer|
#  if !ENV['IS_CI']
  #  flipper_post_install(installer)
#  end

# This is also important AND MUST BE IN SAME ORDER
react_native_post_install(installer)
installer.pods_project.targets.each do |target|
  if target.name == 'RCT-Folly'
    target.build_configurations.each do |config|
      config.build_settings['HEADER_SEARCH_PATHS'] = "$(inherited) ${PODS_ROOT}/fmt/include"
    end
  end
end
#   __apply_Xcode_12_5_M1_post_install_workaround(installer)
installer.pods_project.build_configurations.each do |config|
  config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
end
end


  # post_install do |installer|
  #   react_native_post_install(installer)
  #   __apply_Xcode_12_5_M1_post_install_workaround(installer)
  #   installer.pods_project.targets.each do |target|
  #     target.build_configurations.each do |config|
  #       config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = "arm64"
  #     end
  #   end
  # end 


